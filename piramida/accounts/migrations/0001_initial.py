# Generated by Django 4.2.5 on 2023-09-09 17:24

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('catalog', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('postcode', models.IntegerField(blank=True, null=True, verbose_name='почтовый индекс')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='accounts/', verbose_name='фотография')),
                ('phone', models.CharField(max_length=16, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='Введите корректный номер, без пробелов (+79999999999)', regex='^\\+?7?\\d{8,15}$')], verbose_name='контактный номер')),
                ('city', models.CharField(blank=True, max_length=256, null=True, verbose_name='город')),
                ('street', models.CharField(blank=True, max_length=256, null=True, verbose_name='улица')),
                ('house_number', models.IntegerField(blank=True, null=True, verbose_name='номер дома')),
                ('full_address', models.TextField(blank=True, null=True, verbose_name='Полный адрес')),
                ('apartment_number', models.IntegerField(blank=True, null=True, verbose_name='номер квартиры')),
                ('spent_money', models.DecimalField(decimal_places=2, default=0, max_digits=9, verbose_name='потратил денег')),
                ('is_seller', models.BooleanField(default=False, verbose_name='продавец')),
                ('patronymic', models.CharField(default='', error_messages={'max_length': 'Слишком длинное Отчество!'}, max_length=50, verbose_name='Отчество')),
                ('limit_items_views', models.IntegerField(blank=True, default=20, help_text='Тут можно изменить это значение, по умолчанию 20 минимум 4.', validators=[django.core.validators.MinValueValidator(4)], verbose_name='Сколько максимум показывать товаров')),
                ('item_in_page_views', models.IntegerField(blank=True, default=8, error_messages={'min_length': 'Не стоит устанавливать меньше 2!'}, help_text='По сколько товаров будет добавляться при нажатии на кнопку "показать еще", но не больше чем разрешено', validators=[django.core.validators.MinValueValidator(2)], verbose_name='По сколько товаров выводить на странице')),
            ],
            options={
                'verbose_name': 'клиент',
                'verbose_name_plural': 'клиенты',
                'db_table': 'Client',
            },
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='accounts/', verbose_name='фотография')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clients_check', models.FileField(blank=True, null=True, upload_to='check/', verbose_name='чек')),
                ('created_dt', models.DateField(auto_now_add=True)),
                ('delivery', models.CharField(choices=[('Обычная доставка', 'Обычная доставка'), ('Экспресс доставка', 'Экспресс доставка (+500 руб.)')], db_index=True, default='Обычная доставка', max_length=50, verbose_name='Способ доставки')),
                ('status_pay', models.BooleanField(default=False, verbose_name='Статус оплаты')),
                ('number_order', models.TextField(blank=True, null=True, verbose_name='Номер заказа')),
                ('delivery_price', models.DecimalField(decimal_places=2, default=0, max_digits=9, verbose_name='цена доставки')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_order_view', related_query_name='client_order_views', to='accounts.client')),
            ],
            options={
                'verbose_name': 'заказ',
                'verbose_name_plural': 'заказы',
                'db_table': 'Orders',
                'ordering': ['-number_order'],
            },
        ),
        migrations.CreateModel(
            name='ClientProductView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_dt', models.DateField(auto_now_add=True, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_products_view', related_query_name='client_products_views', to='accounts.client')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_products_view', related_query_name='client_products_views', to='catalog.product')),
            ],
            options={
                'verbose_name': 'просмотренный товар',
                'verbose_name_plural': 'просмотренные товары',
                'ordering': ('-created_dt',),
            },
        ),
        migrations.AddField(
            model_name='client',
            name='item_view',
            field=models.ManyToManyField(blank=True, through='accounts.ClientProductView', to='catalog.product', verbose_name='Товары, которые смотрел пользователь'),
        ),
        migrations.AddField(
            model_name='client',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='пользователь'),
        ),
    ]
